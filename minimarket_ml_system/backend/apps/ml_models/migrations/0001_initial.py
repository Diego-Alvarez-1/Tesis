# Generated by Django 4.2.7 on 2025-06-14 21:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre del modelo')),
                ('model_type', models.CharField(choices=[('LINEAR_REGRESSION', 'Regresión Lineal'), ('RANDOM_FOREST', 'Random Forest'), ('DECISION_TREE', 'Árbol de Decisión'), ('PROPHET', 'Prophet (Series Temporales)'), ('ARIMA', 'ARIMA'), ('XGB', 'XGBoost')], max_length=50, verbose_name='Tipo de modelo')),
                ('version', models.CharField(max_length=50, verbose_name='Versión')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('model_file', models.FileField(upload_to='ml_models/', verbose_name='Archivo del modelo')),
                ('parameters', models.JSONField(default=dict, verbose_name='Parámetros del modelo')),
                ('metrics', models.JSONField(default=dict, verbose_name='Métricas de evaluación')),
                ('training_data_size', models.IntegerField(verbose_name='Tamaño de datos de entrenamiento')),
                ('training_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de entrenamiento')),
                ('training_duration', models.DurationField(blank=True, null=True, verbose_name='Duración del entrenamiento')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('is_default', models.BooleanField(default=False, verbose_name='Modelo por defecto')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Modelo ML',
                'verbose_name_plural': 'Modelos ML',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PredictionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_days', models.IntegerField(default=30, verbose_name='Días a predecir')),
                ('input_data', models.JSONField(default=dict, verbose_name='Datos de entrada')),
                ('prediction_result', models.JSONField(default=dict, verbose_name='Resultado de predicción')),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Score de confianza')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('processing_time', models.DurationField(blank=True, null=True, verbose_name='Tiempo de procesamiento')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de solicitud')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de completado')),
                ('model_used', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ml_models.mlmodel', verbose_name='Modelo usado')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Producto')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Solicitud de predicción',
                'verbose_name_plural': 'Solicitudes de predicción',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='ModelPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_date', models.DateField(verbose_name='Fecha de evaluación')),
                ('evaluation_period', models.CharField(choices=[('DAILY', 'Diario'), ('WEEKLY', 'Semanal'), ('MONTHLY', 'Mensual')], max_length=20, verbose_name='Período de evaluación')),
                ('mae', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='MAE (Error Absoluto Medio)')),
                ('rmse', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='RMSE (Error Cuadrático Medio)')),
                ('mape', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='MAPE (%)')),
                ('r2_score', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True, verbose_name='R² Score')),
                ('predictions_count', models.IntegerField(verbose_name='Cantidad de predicciones')),
                ('notes', models.TextField(blank=True, verbose_name='Observaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_models.mlmodel', verbose_name='Modelo')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Producto')),
            ],
            options={
                'verbose_name': 'Rendimiento del modelo',
                'verbose_name_plural': 'Rendimientos de modelos',
                'ordering': ['-evaluation_date'],
            },
        ),
        migrations.CreateModel(
            name='DemandPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_date', models.DateField(verbose_name='Fecha de predicción')),
                ('prediction_period', models.CharField(choices=[('DAILY', 'Diario'), ('WEEKLY', 'Semanal'), ('MONTHLY', 'Mensual')], default='DAILY', max_length=20, verbose_name='Período')),
                ('predicted_quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cantidad predicha')),
                ('lower_bound', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Límite inferior')),
                ('upper_bound', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Límite superior')),
                ('actual_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cantidad real')),
                ('error', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Error absoluto')),
                ('error_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Error porcentual')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('prediction_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ml_models.predictionrequest', verbose_name='Solicitud')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Producto')),
            ],
            options={
                'verbose_name': 'Predicción de demanda',
                'verbose_name_plural': 'Predicciones de demanda',
                'ordering': ['product', 'prediction_date'],
                'unique_together': {('product', 'prediction_date', 'prediction_period')},
            },
        ),
    ]
