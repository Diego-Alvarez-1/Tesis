# Generated by Django 4.2.7 on 2025-06-07 22:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Nombres')),
                ('last_name', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('document_type', models.CharField(choices=[('DNI', 'DNI'), ('RUC', 'RUC'), ('CE', 'CE')], default='DNI', max_length=10, verbose_name='Tipo de documento')),
                ('document_number', models.CharField(max_length=20, unique=True, verbose_name='Número de documento')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('address', models.TextField(blank=True, verbose_name='Dirección')),
                ('customer_type', models.CharField(choices=[('REGULAR', 'Cliente Regular'), ('FREQUENT', 'Cliente Frecuente'), ('VIP', 'Cliente VIP'), ('WHOLESALE', 'Mayorista')], default='REGULAR', max_length=20, verbose_name='Tipo de cliente')),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Límite de crédito')),
                ('current_debt', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Deuda actual')),
                ('total_purchases', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total de compras')),
                ('purchase_count', models.IntegerField(default=0, verbose_name='Cantidad de compras')),
                ('last_purchase_date', models.DateTimeField(blank=True, null=True, verbose_name='Última compra')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='DailySummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='Fecha')),
                ('total_sales', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total ventas')),
                ('sale_count', models.IntegerField(default=0, verbose_name='Cantidad de ventas')),
                ('products_sold', models.IntegerField(default=0, verbose_name='Productos vendidos')),
                ('unique_products', models.IntegerField(default=0, verbose_name='Productos únicos')),
                ('cash_sales', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Ventas en efectivo')),
                ('card_sales', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Ventas con tarjeta')),
                ('transfer_sales', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Ventas por transferencia')),
                ('credit_sales', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Ventas a crédito')),
                ('digital_wallet_sales', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Ventas por billetera digital')),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Costo total')),
                ('total_profit', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Ganancia total')),
                ('profit_margin', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Margen de ganancia %')),
                ('average_sale', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Venta promedio')),
                ('average_items_per_sale', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Items promedio por venta')),
                ('unique_customers', models.IntegerField(default=0, verbose_name='Clientes únicos')),
                ('new_customers', models.IntegerField(default=0, verbose_name='Clientes nuevos')),
                ('peak_hour', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)], verbose_name='Hora pico')),
                ('peak_hour_sales', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Ventas hora pico')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
            ],
            options={
                'verbose_name': 'Resumen diario',
                'verbose_name_plural': 'Resúmenes diarios',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_number', models.CharField(max_length=50, unique=True, verbose_name='Número de venta')),
                ('payment_method', models.CharField(choices=[('CASH', 'Efectivo'), ('CARD', 'Tarjeta'), ('TRANSFER', 'Transferencia'), ('CREDIT', 'Crédito'), ('YAPE', 'Yape'), ('PLIN', 'Plin')], max_length=20, verbose_name='Método de pago')),
                ('status', models.CharField(choices=[('PENDING', 'Pendiente'), ('COMPLETED', 'Completada'), ('CANCELLED', 'Cancelada'), ('REFUNDED', 'Devuelta')], default='COMPLETED', max_length=20, verbose_name='Estado')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Subtotal')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Descuento %')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Monto descuento')),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='IGV')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('invoice_number', models.CharField(blank=True, max_length=50, verbose_name='Número de factura')),
                ('sale_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de venta')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sales.customer', verbose_name='Cliente')),
                ('seller', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Vendedor')),
            ],
            options={
                'verbose_name': 'Venta',
                'verbose_name_plural': 'Ventas',
                'ordering': ['-sale_date'],
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cantidad')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio unitario')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Descuento %')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio total')),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Costo unitario')),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Costo total')),
                ('profit', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Ganancia')),
                ('notes', models.CharField(blank=True, max_length=200, verbose_name='Notas')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product', verbose_name='Producto')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='sales.sale', verbose_name='Venta')),
            ],
            options={
                'verbose_name': 'Item de venta',
                'verbose_name_plural': 'Items de venta',
            },
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['sale_date'], name='sales_sale_sale_da_2fd927_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['customer'], name='sales_sale_custome_f0dcab_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['status'], name='sales_sale_status_532843_idx'),
        ),
    ]
