# Generated by Django 4.2.7 on 2025-06-07 22:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_number', models.CharField(max_length=50, unique=True, verbose_name='Número de conteo')),
                ('description', models.CharField(max_length=200, verbose_name='Descripción')),
                ('status', models.CharField(choices=[('PLANNED', 'Planificado'), ('IN_PROGRESS', 'En progreso'), ('COMPLETED', 'Completado'), ('CANCELLED', 'Cancelado')], default='PLANNED', max_length=20, verbose_name='Estado')),
                ('scheduled_date', models.DateField(verbose_name='Fecha programada')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de inicio')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de fin')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('participants', models.ManyToManyField(blank=True, related_name='inventory_counts_participated', to=settings.AUTH_USER_MODEL, verbose_name='Participantes')),
                ('responsible', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_counts_responsible', to=settings.AUTH_USER_MODEL, verbose_name='Responsable')),
            ],
            options={
                'verbose_name': 'Conteo de inventario',
                'verbose_name_plural': 'Conteos de inventario',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, unique=True, verbose_name='Número de orden')),
                ('status', models.CharField(choices=[('DRAFT', 'Borrador'), ('PENDING', 'Pendiente'), ('APPROVED', 'Aprobada'), ('ORDERED', 'Ordenada'), ('PARTIAL', 'Recibida parcialmente'), ('RECEIVED', 'Recibida'), ('CANCELLED', 'Cancelada')], default='DRAFT', max_length=20, verbose_name='Estado')),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de orden')),
                ('expected_date', models.DateField(blank=True, null=True, verbose_name='Fecha esperada')),
                ('received_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de recepción')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Subtotal')),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='IGV')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_orders_approved', to=settings.AUTH_USER_MODEL, verbose_name='Aprobado por')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_orders_created', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.supplier', verbose_name='Proveedor')),
            ],
            options={
                'verbose_name': 'Orden de compra',
                'verbose_name_plural': 'Órdenes de compra',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('IN', 'Entrada'), ('OUT', 'Salida'), ('ADJUST', 'Ajuste'), ('RETURN', 'Devolución'), ('DAMAGED', 'Producto dañado'), ('EXPIRED', 'Producto vencido')], max_length=10, verbose_name='Tipo de movimiento')),
                ('reason', models.CharField(choices=[('PURCHASE', 'Compra'), ('SALE', 'Venta'), ('RETURN_SUPPLIER', 'Devolución a proveedor'), ('RETURN_CUSTOMER', 'Devolución de cliente'), ('INVENTORY_ADJUST', 'Ajuste de inventario'), ('DAMAGED_PRODUCT', 'Producto dañado'), ('EXPIRED_PRODUCT', 'Producto vencido'), ('INITIAL_STOCK', 'Stock inicial')], max_length=20, verbose_name='Razón')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cantidad')),
                ('stock_before', models.IntegerField(verbose_name='Stock antes')),
                ('stock_after', models.IntegerField(verbose_name='Stock después')),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Costo unitario')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Costo total')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('reference_document', models.CharField(blank=True, max_length=100, verbose_name='Documento de referencia')),
                ('movement_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de movimiento')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Producto')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Movimiento de stock',
                'verbose_name_plural': 'Movimientos de stock',
                'ordering': ['-movement_date'],
                'indexes': [models.Index(fields=['product', 'movement_date'], name='inventory_s_product_c6681e_idx'), models.Index(fields=['movement_type'], name='inventory_s_movemen_018f99_idx')],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cantidad ordenada')),
                ('quantity_received', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cantidad recibida')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio unitario')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Precio total')),
                ('is_received', models.BooleanField(default=False, verbose_name='Recibido')),
                ('received_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de recepción')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product', verbose_name='Producto')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchaseorder', verbose_name='Orden de compra')),
            ],
            options={
                'verbose_name': 'Item de orden de compra',
                'verbose_name_plural': 'Items de órdenes de compra',
                'unique_together': {('purchase_order', 'product')},
            },
        ),
        migrations.CreateModel(
            name='InventoryCountItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_quantity', models.IntegerField(verbose_name='Cantidad en sistema')),
                ('counted_quantity', models.IntegerField(blank=True, null=True, verbose_name='Cantidad contada')),
                ('difference', models.IntegerField(default=0, verbose_name='Diferencia')),
                ('notes', models.TextField(blank=True, verbose_name='Observaciones')),
                ('counted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de conteo')),
                ('counted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Contado por')),
                ('inventory_count', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.inventorycount', verbose_name='Conteo de inventario')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product', verbose_name='Producto')),
            ],
            options={
                'verbose_name': 'Item de conteo',
                'verbose_name_plural': 'Items de conteo',
                'unique_together': {('inventory_count', 'product')},
            },
        ),
    ]
